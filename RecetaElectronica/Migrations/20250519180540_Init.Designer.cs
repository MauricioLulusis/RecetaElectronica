// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecetaElectronica.Context;

#nullable disable

namespace RecetaElectronica.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250519180540_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecetaElectronica.Modelo.Coberturas", b =>
                {
                    b.Property<int>("CoberturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoberturaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ObraSocialId")
                        .HasColumnType("int");

                    b.HasKey("CoberturaId");

                    b.HasIndex("ObraSocialId");

                    b.ToTable("Coberturas", (string)null);

                    b.HasData(
                        new
                        {
                            CoberturaId = 1,
                            Nombre = "Omint2000",
                            ObraSocialId = 1
                        },
                        new
                        {
                            CoberturaId = 2,
                            Nombre = "Omint2000K",
                            ObraSocialId = 1
                        },
                        new
                        {
                            CoberturaId = 3,
                            Nombre = "Omint2500K",
                            ObraSocialId = 1
                        },
                        new
                        {
                            CoberturaId = 4,
                            Nombre = "Smg30",
                            ObraSocialId = 3
                        },
                        new
                        {
                            CoberturaId = 5,
                            Nombre = "Smg50",
                            ObraSocialId = 3
                        },
                        new
                        {
                            CoberturaId = 6,
                            Nombre = "SmgPlatinum",
                            ObraSocialId = 3
                        },
                        new
                        {
                            CoberturaId = 7,
                            Nombre = "Osde210",
                            ObraSocialId = 2
                        },
                        new
                        {
                            CoberturaId = 8,
                            Nombre = "Osde310",
                            ObraSocialId = 2
                        },
                        new
                        {
                            CoberturaId = 9,
                            Nombre = "Osde450",
                            ObraSocialId = 2
                        });
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.Medicamentos", b =>
                {
                    b.Property<int>("MedicamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicamentoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MedicamentoId");

                    b.ToTable("Medicamentos", (string)null);

                    b.HasData(
                        new
                        {
                            MedicamentoId = 1,
                            Nombre = "Paracetamol 500mg"
                        },
                        new
                        {
                            MedicamentoId = 2,
                            Nombre = "Ibuprofeno 400mg"
                        },
                        new
                        {
                            MedicamentoId = 3,
                            Nombre = "Amoxicilina 500mg"
                        },
                        new
                        {
                            MedicamentoId = 4,
                            Nombre = "Azitromicina 500mg"
                        },
                        new
                        {
                            MedicamentoId = 5,
                            Nombre = "Omeprazol 20mg"
                        },
                        new
                        {
                            MedicamentoId = 6,
                            Nombre = "Losartán 50mg"
                        },
                        new
                        {
                            MedicamentoId = 7,
                            Nombre = "Atorvastatina 20mg"
                        },
                        new
                        {
                            MedicamentoId = 8,
                            Nombre = "Metformina 850mg"
                        },
                        new
                        {
                            MedicamentoId = 9,
                            Nombre = "Levotiroxina 50mcg"
                        },
                        new
                        {
                            MedicamentoId = 10,
                            Nombre = "Salbutamol Inhalador"
                        },
                        new
                        {
                            MedicamentoId = 11,
                            Nombre = "Amiodarona 200mg"
                        },
                        new
                        {
                            MedicamentoId = 12,
                            Nombre = "Clonazepam 0.5mg"
                        },
                        new
                        {
                            MedicamentoId = 13,
                            Nombre = "Sertralina 50mg"
                        },
                        new
                        {
                            MedicamentoId = 14,
                            Nombre = "Cetirizina 10mg"
                        },
                        new
                        {
                            MedicamentoId = 15,
                            Nombre = "Loratadina 10mg"
                        },
                        new
                        {
                            MedicamentoId = 16,
                            Nombre = "Diclofenac 75mg"
                        },
                        new
                        {
                            MedicamentoId = 17,
                            Nombre = "Ranitidina 150mg"
                        },
                        new
                        {
                            MedicamentoId = 18,
                            Nombre = "Fluconazol 150mg"
                        },
                        new
                        {
                            MedicamentoId = 19,
                            Nombre = "Enalapril 10mg"
                        },
                        new
                        {
                            MedicamentoId = 20,
                            Nombre = "Carvedilol 25mg"
                        });
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.Medicos", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicoId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MedicoId");

                    b.ToTable("Medicos", (string)null);

                    b.HasData(
                        new
                        {
                            MedicoId = 1,
                            Apellido = "Gonzalez",
                            Matricula = "MP12345",
                            Nombre = "Ricardo"
                        },
                        new
                        {
                            MedicoId = 2,
                            Apellido = "Martinez",
                            Matricula = "MP54321",
                            Nombre = "Lucia"
                        },
                        new
                        {
                            MedicoId = 3,
                            Apellido = "Lopez",
                            Matricula = "MP98765",
                            Nombre = "Juan"
                        });
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.ObraSocial", b =>
                {
                    b.Property<int>("ObraSocialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObraSocialId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ObraSocialId");

                    b.ToTable("ObrasSociales", (string)null);

                    b.HasData(
                        new
                        {
                            ObraSocialId = 1,
                            Nombre = "Omint"
                        },
                        new
                        {
                            ObraSocialId = 2,
                            Nombre = "Osde"
                        },
                        new
                        {
                            ObraSocialId = 3,
                            Nombre = "Swiss Medical"
                        });
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.Pacientes", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacienteId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CoberturaId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ObraSocialId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PacienteId");

                    b.HasIndex("CoberturaId");

                    b.HasIndex("ObraSocialId");

                    b.ToTable("Pacientes", (string)null);

                    b.HasData(
                        new
                        {
                            PacienteId = 1,
                            Apellido = "Perez",
                            CoberturaId = 1,
                            Direccion = "Calle Falsa 123",
                            Dni = "12345678",
                            FechaNacimiento = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Juan",
                            ObraSocialId = 1,
                            Telefono = "3764000000"
                        },
                        new
                        {
                            PacienteId = 2,
                            Apellido = "Gomez",
                            CoberturaId = 7,
                            Direccion = "Avenida Siempre Viva 742",
                            Dni = "23456789",
                            FechaNacimiento = new DateTime(1985, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "María",
                            ObraSocialId = 2,
                            Telefono = "3764111111"
                        },
                        new
                        {
                            PacienteId = 4,
                            Apellido = "Fernandez",
                            CoberturaId = 4,
                            Direccion = "Boulevard Mitre 321",
                            Dni = "45678901",
                            FechaNacimiento = new DateTime(2005, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Laura",
                            ObraSocialId = 3,
                            Telefono = "3764333333"
                        },
                        new
                        {
                            PacienteId = 5,
                            Apellido = "Martinez",
                            CoberturaId = 5,
                            Direccion = "Los Pinos 789",
                            Dni = "56789012",
                            FechaNacimiento = new DateTime(1950, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Diego",
                            ObraSocialId = 3,
                            Telefono = "3764444444"
                        },
                        new
                        {
                            PacienteId = 6,
                            Apellido = "Diaz",
                            CoberturaId = 2,
                            Direccion = "Ruta Nacional 12 Km 20",
                            Dni = "67890123",
                            FechaNacimiento = new DateTime(1999, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Sofia",
                            ObraSocialId = 1,
                            Telefono = "3764555555"
                        },
                        new
                        {
                            PacienteId = 7,
                            Apellido = "Silva",
                            CoberturaId = 6,
                            Direccion = "Barrio Centro Manzana 10",
                            Dni = "78901234",
                            FechaNacimiento = new DateTime(2010, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Lucas",
                            ObraSocialId = 3,
                            Telefono = "3764666666"
                        });
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.RecetaMedicamento", b =>
                {
                    b.Property<int>("RecetaMedicamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecetaMedicamentoId"));

                    b.Property<int>("MedicamentoId")
                        .HasColumnType("int");

                    b.Property<int>("RecetaId")
                        .HasColumnType("int");

                    b.HasKey("RecetaMedicamentoId");

                    b.HasIndex("MedicamentoId");

                    b.HasIndex("RecetaId");

                    b.ToTable("RecetaMedicamentos");
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.Recetas", b =>
                {
                    b.Property<int>("RecetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecetaId"));

                    b.Property<int>("CoberturaId")
                        .HasColumnType("int");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<string>("Paciente")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("RecetaId");

                    b.HasIndex("CoberturaId");

                    b.HasIndex("MedicoId");

                    b.ToTable("Recetas", (string)null);
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.ReglaCantidad", b =>
                {
                    b.Property<int>("ReglaCantidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReglaCantidadId"));

                    b.Property<int?>("CoberturaId")
                        .HasColumnType("int");

                    b.Property<int?>("EdadMaxima")
                        .HasColumnType("int");

                    b.Property<int?>("EdadMinima")
                        .HasColumnType("int");

                    b.Property<string>("Frecuencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Maximo")
                        .HasColumnType("int");

                    b.Property<int?>("Minimo")
                        .HasColumnType("int");

                    b.Property<int>("ObraSocialId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TopeMonetario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReglaCantidadId");

                    b.HasIndex("CoberturaId");

                    b.HasIndex("ObraSocialId");

                    b.ToTable("ReglasCantidad", (string)null);

                    b.HasData(
                        new
                        {
                            ReglaCantidadId = 1,
                            CoberturaId = 1,
                            EdadMaxima = 0,
                            EdadMinima = 50,
                            Frecuencia = "Indefinido",
                            Maximo = 5,
                            Minimo = 0,
                            ObraSocialId = 1,
                            TopeMonetario = 0m
                        },
                        new
                        {
                            ReglaCantidadId = 2,
                            CoberturaId = 1,
                            EdadMaxima = 49,
                            EdadMinima = 0,
                            Frecuencia = "Indefinido",
                            Maximo = 3,
                            Minimo = 0,
                            ObraSocialId = 1,
                            TopeMonetario = 0m
                        },
                        new
                        {
                            ReglaCantidadId = 3,
                            CoberturaId = 2,
                            EdadMaxima = 0,
                            EdadMinima = 0,
                            Frecuencia = "Indefinido",
                            Maximo = 3,
                            Minimo = 0,
                            ObraSocialId = 1,
                            TopeMonetario = 0m
                        },
                        new
                        {
                            ReglaCantidadId = 4,
                            CoberturaId = 4,
                            EdadMaxima = 0,
                            EdadMinima = 18,
                            Frecuencia = "Indefinido",
                            Maximo = 2,
                            Minimo = 0,
                            ObraSocialId = 3,
                            TopeMonetario = 0m
                        },
                        new
                        {
                            ReglaCantidadId = 5,
                            CoberturaId = 5,
                            EdadMaxima = 0,
                            EdadMinima = 50,
                            Frecuencia = "Indefinido",
                            Maximo = 5,
                            Minimo = 0,
                            ObraSocialId = 3,
                            TopeMonetario = 0m
                        },
                        new
                        {
                            ReglaCantidadId = 6,
                            CoberturaId = 5,
                            EdadMaxima = 49,
                            EdadMinima = 0,
                            Frecuencia = "Indefinido",
                            Maximo = 3,
                            Minimo = 0,
                            ObraSocialId = 3,
                            TopeMonetario = 0m
                        },
                        new
                        {
                            ReglaCantidadId = 7,
                            CoberturaId = 6,
                            EdadMaxima = 0,
                            EdadMinima = 0,
                            Frecuencia = "Indefinido",
                            Maximo = 0,
                            Minimo = 0,
                            ObraSocialId = 3,
                            TopeMonetario = 40000m
                        },
                        new
                        {
                            ReglaCantidadId = 8,
                            CoberturaId = 7,
                            EdadMaxima = 0,
                            EdadMinima = 0,
                            Frecuencia = "Anual",
                            Maximo = 8,
                            Minimo = 0,
                            ObraSocialId = 2,
                            TopeMonetario = 0m
                        },
                        new
                        {
                            ReglaCantidadId = 9,
                            CoberturaId = 8,
                            EdadMaxima = 0,
                            EdadMinima = 0,
                            Frecuencia = "Mensual",
                            Maximo = 2,
                            Minimo = 0,
                            ObraSocialId = 2,
                            TopeMonetario = 0m
                        },
                        new
                        {
                            ReglaCantidadId = 10,
                            CoberturaId = 9,
                            EdadMaxima = 0,
                            EdadMinima = 0,
                            Frecuencia = "Anual",
                            Maximo = 30,
                            Minimo = 0,
                            ObraSocialId = 2,
                            TopeMonetario = 0m
                        });
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.Coberturas", b =>
                {
                    b.HasOne("RecetaElectronica.Modelo.ObraSocial", "ObraSocial")
                        .WithMany("Coberturas")
                        .HasForeignKey("ObraSocialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObraSocial");
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.Pacientes", b =>
                {
                    b.HasOne("RecetaElectronica.Modelo.Coberturas", "Cobertura")
                        .WithMany()
                        .HasForeignKey("CoberturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecetaElectronica.Modelo.ObraSocial", "ObraSocial")
                        .WithMany()
                        .HasForeignKey("ObraSocialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cobertura");

                    b.Navigation("ObraSocial");
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.RecetaMedicamento", b =>
                {
                    b.HasOne("RecetaElectronica.Modelo.Medicamentos", "Medicamento")
                        .WithMany()
                        .HasForeignKey("MedicamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecetaElectronica.Modelo.Recetas", "Receta")
                        .WithMany("RecetaMedicamentos")
                        .HasForeignKey("RecetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamento");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.Recetas", b =>
                {
                    b.HasOne("RecetaElectronica.Modelo.Coberturas", "Cobertura")
                        .WithMany()
                        .HasForeignKey("CoberturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecetaElectronica.Modelo.Medicos", "Medico")
                        .WithMany("RecetasEmitidas")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cobertura");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.ReglaCantidad", b =>
                {
                    b.HasOne("RecetaElectronica.Modelo.Coberturas", "Cobertura")
                        .WithMany()
                        .HasForeignKey("CoberturaId");

                    b.HasOne("RecetaElectronica.Modelo.ObraSocial", "ObraSocial")
                        .WithMany()
                        .HasForeignKey("ObraSocialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cobertura");

                    b.Navigation("ObraSocial");
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.Medicos", b =>
                {
                    b.Navigation("RecetasEmitidas");
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.ObraSocial", b =>
                {
                    b.Navigation("Coberturas");
                });

            modelBuilder.Entity("RecetaElectronica.Modelo.Recetas", b =>
                {
                    b.Navigation("RecetaMedicamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
